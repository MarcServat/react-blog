{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","App.js","reducers/index.js","reducers/postsReducer.js","reducers/userReducer.js","index.js"],"names":["axios","create","baseURL","_fetchUser","_","memoize","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","id","dispatch","response","wrap","_context2","prev","next","jsonPlaceholder","get","concat","sent","type","payload","data","stop","this","_x2","_x3","apply","arguments","UserHeader","props","fetchUser","userId","user","react_default","createElement","className","name","Component","connect","state","ownProps","users","find","PostList","fetchPosts","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","_context","_x","App","components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.0f638c5d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/'\n})","import jsonPlaceholder from '../apis/jsonPlaceholder';\nimport _ from 'lodash';\n\nexport const fetchPosts = () => async (dispatch) => {\n    const response = await jsonPlaceholder.get('/posts');\n\n    dispatch({\n      type: 'FETCH_POSTS',\n      payload: response.data\n    })\n};\n\nexport const fetchUser = (id) => (dispatch) => _fetchUser(id, dispatch);\n\nconst _fetchUser = _.memoize(async (id, dispatch) => {\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n\n    dispatch({\n        type: 'FETCH_USER',\n        payload: response.data\n    })\n});\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchUser} from \"../actions\";\n\nclass UserHeader extends Component {\n    componentDidMount() {\n        this.props.fetchUser(this.props.userId)\n    }\n\n    render() {\n        const {user} = this.props;\n        if (!user) {\n            return null\n        }\n        return (\n            <div className=\"header\">{user.name}</div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {user: state.users.find(user => user.id === ownProps.userId)}\n};\n\nexport default connect(mapStateToProps, {fetchUser})(UserHeader)\n","import React, {Component} from 'react';\nimport {fetchPosts} from \"../actions\";\nimport {connect} from \"react-redux\";\nimport UserHeader from './UserHeader';\n\nclass PostList extends Component {\n\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  renderList() {\n    return this.props.posts.map( post => {\n      return (\n          <div className=\"item\" key={post.id}>\n            <i className=\"large middle aligned icon user\"/>\n            <div className=\"content\">\n              <div className=\"description\">\n                <h2>{post.title}</h2>\n                <p>{post.body}</p>\n              </div>\n                <UserHeader userId={post.userId}/>\n            </div>\n          </div>\n      );\n    })\n  }\n\n  render() {\n    return (\n        <div className=\"ui relaxed divided list\">\n          {this.renderList()}\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {posts: state.posts}\n};\n\nexport default connect(mapStateToProps, {fetchPosts})(PostList);\n","import React, { Component } from 'react';\nimport PostList from \"./components/PostList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <PostList/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {combineReducers} from \"redux\";\nimport postsReducer from './postsReducer';\nimport userReducer from  './userReducer';\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: userReducer\n});\n","\nexport default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n}","\nexport default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_USER':\n            return [...state, action.payload];\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}